[gd_scene load_steps=6 format=3 uid="uid://d1i6vg51ekobm"]

[ext_resource type="Script" uid="uid://d24pjumjj2uvk" path="res://Pref/Resource/Stone/ResourceObject.gd" id="1_jy2jx"]
[ext_resource type="PackedScene" uid="uid://6fq228vgppjm" path="res://Pref/Resource/StoneBig/Model/Rock_1_D_Color1.fbx" id="2_vkecc"]

[sub_resource type="BoxShape3D" id="BoxShape3D_ph011"]
size = Vector3(0.96715087, 1.1332566, 1.1763314)

[sub_resource type="GDScript" id="GDScript_1j0e8"]
script/source = "extends BaseResourceComponent
class_name ResourceState

@export var max_gatherers: int = 5
@export var slot_distance: float = 1.5  # Distance from resource center to slot
var current_gatherers: Dictionary = {}  # Skeleton -> slot_index
var slots: Array[Vector3] = []
var hp: int = 50
var is_depleted: bool = false

func _setup():
	for i in range(max_gatherers):
		var angle = 2 * PI * i / max_gatherers
		slots.append(Vector3(cos(angle), 0, sin(angle)) * slot_distance)

func can_add_gatherer() -> bool:
	return current_gatherers.size() < max_gatherers

func add_gatherer(skel: Skeleton) -> Vector3:
	if can_add_gatherer():
		var available_slots: Array = range(max_gatherers).filter(func(idx): return not current_gatherers.values().has(idx))
		if available_slots:
			available_slots.shuffle()  # Randomize for variety
			var slot_idx = available_slots[0]
			current_gatherers[skel] = slot_idx
			return slots[slot_idx]
	return Vector3.ZERO

func remove_gatherer(skel: Skeleton):
	current_gatherers.erase(skel)

func take_damage(amount: int):
	hp -= amount
	if hp <= 0:
		is_depleted = true
		print(\"Ресурс исчерпан!\")
		current_gatherers.clear()
		entity.queue_free()
	else:
		var tween = entity.create_tween()
		tween.tween_property(entity, \"scale\", Vector3(1.1, 1.1, 1.1), 0.1).set_trans(Tween.TRANS_SINE)
		tween.tween_property(entity, \"scale\", Vector3(1.0, 1.0, 1.0), 0.1).set_trans(Tween.TRANS_SINE)
"

[sub_resource type="GDScript" id="GDScript_fyfxt"]
script/source = "extends BaseResourceComponent
class_name ResourceInteraction

var is_depleted: bool = false

func _setup():
	var state = entity.components[\"state\"] as ResourceState
	if state:
		is_depleted = state.is_depleted
"

[node name="StoneBig" type="StaticBody3D" node_paths=PackedStringArray("component_parent") groups=["gatherables"]]
script = ExtResource("1_jy2jx")
resource_id = "StoneBig"
component_parent = NodePath("Components")

[node name="Rock_1_D_Color1" parent="." instance=ExtResource("2_vkecc")]
transform = Transform3D(2.748795, 0, 0, 0, 2.0228362, 0, 0, 0, 2.748795, 0, 0, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.07387082, 0.57185894, -0.045297205)
shape = SubResource("BoxShape3D_ph011")

[node name="Components" type="Node" parent="."]

[node name="State" type="Node" parent="Components"]
script = SubResource("GDScript_1j0e8")

[node name="Interaction" type="Node" parent="Components"]
script = SubResource("GDScript_fyfxt")

[node name="NavigationObstacle3D" type="NavigationObstacle3D" parent="."]
height = 0.0
vertices = PackedVector3Array(-1.0771289, 0, -1.8291782, -1.0383134, 0, 1.5380622, 1.552618, 0, 1.5380622, 1.5623217, 0, -1.8291782)
